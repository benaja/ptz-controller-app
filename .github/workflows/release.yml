name: Release
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      dry-run:
        description: 'Compiles the app but not upload artifacts to distribution server'
        default: false
        required: false
        type: boolean

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

jobs:
  build:
    permissions:
      contents: write # Allows this job to create releases

    strategy:
      # fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          # cache: 'npm'
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        if: matrix.os == 'macos-latest'
        with:
          python-version: '3.11'

      - name: Install appdmg for macOS
        if: matrix.os == 'macos-latest'
        run: npm i -D appdmg

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      # - name: Package Electron App
      #   run: npm run package

      # - name: Build Electron App
      #   run: npm run make

      - name: Publish
        run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.os }}-artifacts
      #     path: out/make/**

      # - name: Archive Production Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ptz-controller
      #     path: out/make/**/*
      #   env:
      #     # Code Signing params
      #     # See https://www.electron.build/code-signing
      #     # CSC_LINK: ''
      #     # CSC_KEY_PASSWORD: ''
      #     # Publishing artifacts
      #     GH_TOKEN: ${{ secrets.github_token }} # GitHub token, automatically provided (No need to define this secret in the repo settings)
